@import "https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,700,700i,800,800i";
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active,
a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

body {
  font-family: "Open Sans", sans-serif;
  font-size: 12px;
  color: red;
}
@media screen and (min-width: 768px) {
  body {
    font-size: 14px;
  }
}
body * {
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

body {
  background-color: white;
  font-family: "Open Sans", sans-serif;
  text-rendering: optimizeLegibility;
  font-size: 14px;
  line-height: 1.6;
  color: #58626c;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
}

h1, h2, h3, h4, h5, h6 {
  clear: both;
  font-weight: 700;
  margin: 56px 0 28px;
  font-family: "Open Sans", sans-serif;
  text-rendering: optimizeLegibility;
  margin-top: 0;
}

h1 {
  font-size: 72px;
}

h2 {
  font-size: 3.214em;
}

h3 {
  font-size: 2.143em;
  line-height: 1.6;
}

h4, h5, h6 {
  font-size: 19px;
  line-height: 1.10526;
}

h4 {
  letter-spacing: 0.13333em;
}

h6 {
  font-style: italic;
}

p {
  margin: 0pc !important;
}

b, strong {
  font-weight: 700;
}

dfn, cite, em, i {
  font-style: italic;
}

blockquote {
  border-left: 4px solid #1a1a1a;
  color: #686868;
  font-size: 19px;
  font-style: italic;
  line-height: 1.47368;
  margin-bottom: 28px;
  padding: 0 0 0 24px;
}
blockquote:not(.alignleft):not(.alignright) {
  margin-left: -28px;
}
blockquote blockquote:not(.alignleft):not(.alignright) {
  margin-left: 0;
}
blockquote:before {
  content: "";
  display: table;
}
blockquote:after {
  content: "";
  display: table;
  clear: both;
}
blockquote > :last-child {
  margin-bottom: 0;
}
blockquote cite, blockquote small {
  color: #1a1a1a;
  font-size: 16px;
  line-height: 1.75;
}
blockquote em, blockquote i, blockquote cite {
  font-style: normal;
}
blockquote strong, blockquote b {
  font-weight: 400;
}
blockquote.alignleft, blockquote.alignright {
  border: 0 solid #1a1a1a;
  border-top-width: 4px;
  padding: 18px 0 0;
  width: calc(50% - 14px);
}

address {
  font-style: italic;
  margin: 0 0 28px;
}

code, kbd, tt, var, samp {
  font-family: Inconsolata, monospace;
}

pre {
  font-family: Inconsolata, monospace;
  border: 1px solid #d1d1d1;
  font-size: 16px;
  line-height: 1.3125;
  margin: 0 0 28px;
  max-width: 100%;
  overflow: auto;
  padding: 14px;
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

code {
  background-color: #d1d1d1;
  padding: 2px 4px;
}

abbr[title] {
  border-bottom: 1px dotted #d1d1d1;
  cursor: help;
}

mark, ins {
  background: #007acc;
  color: #fff;
  padding: 2px 4px;
  text-decoration: none;
}

sup {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
  top: -6px;
}

sup {
  bottom: -3px;
}

small {
  font-size: 80%;
}

big {
  font-size: 125%;
}

hr {
  background-color: #d1d1d1;
  border: 0;
  height: 1px;
  margin-bottom: 28px;
}

ul, ol {
  margin: 0 0 28px 0;
  padding: 0;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul, li > ol {
  margin-bottom: 0;
}
li > ul {
  margin-left: 20px;
}

blockquote > ul {
  margin-left: 20px;
}

li > ol, blockquote > ol {
  margin-left: 24px;
}

dl {
  margin: 0 0 28px;
}

dt {
  font-weight: bold;
}

dd {
  margin: 0 0 28px;
}

table, th, td {
  border: 1px solid #d1d1d1;
}

.mce-item-table {
  border: 1px solid #d1d1d1;
}
.mce-item-table th, .mce-item-table td {
  border: 1px solid #d1d1d1;
}

table {
  border-collapse: separate;
  border-spacing: 0;
  border-width: 1px 0 0 1px;
  margin: 0 0 28px;
  width: 100%;
}
table a {
  color: #007acc;
}

.mce-item-table {
  border-collapse: separate;
  border-spacing: 0;
  border-width: 1px 0 0 1px;
  margin: 0 0 28px;
  width: 100%;
}

table th, .mce-item-table th {
  border-width: 0 1px 1px 0;
  font-size: 16px;
  font-weight: 700;
  padding: 7px;
  text-align: left;
  vertical-align: baseline;
}

table caption {
  border-width: 0 1px 1px 0;
  font-size: 16px;
  font-weight: 700;
  padding: 7px;
  text-align: left;
  vertical-align: baseline;
}
table td {
  border-width: 0 1px 1px 0;
  font-size: 16px;
  padding: 7px;
  vertical-align: baseline;
}

.mce-item-table td {
  border-width: 0 1px 1px 0;
  font-size: 16px;
  padding: 7px;
  vertical-align: baseline;
}

img {
  border: 0;
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}

a img {
  display: block;
}

figure {
  margin: 0;
}

del {
  opacity: 0.8;
}

fieldset {
  border: 1px solid #d1d1d1;
  margin: 0 0 28px;
  padding: 14px;
}

.alignleft {
  float: left;
  margin: 6px 28px 28px 0;
}

.alignright {
  float: right;
  margin: 6px 0 28px 28px;
}

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto 28px;
}

.wp-audio-shortcode a, .wp-playlist a {
  box-shadow: none;
}

.mce-content-body .wp-audio-playlist {
  margin: 0;
  padding-bottom: 0;
}
.mce-content-body .wp-playlist-tracks {
  margin-top: 0;
}
.mce-content-body .wp-playlist-item {
  padding: 10px 0;
}
.mce-content-body .wp-playlist-item-length {
  top: 10px;
}

.info-preloader {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 999999999999;
  background: white;
  display: none;
}

.process-logo {
  width: 100%;
  margin: 0 auto;
  height: 100%;
}

#pre_loader_block .progress {
  position: relative;
  height: 15px;
  display: block;
  width: 100% !important;
  border-radius: 2px;
  margin: 0;
  overflow: hidden;
}

.progress {
  background-color: #e3a712;
}
.progress .determinate {
  position: absolute;
  background-color: inherit;
  top: 0;
  bottom: 0;
  background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0), white, rgba(255, 255, 255, 0));
  /* For Safari 5.1 to 6.0 */
  /* For Opera 11.1 to 12.0 */
  /* For Firefox 3.6 to 15 */
  background: linear-gradient(to right, rgba(255, 255, 255, 0), white, rgba(255, 255, 255, 0));
  /* Standard syntax (must be last) */
  -webkit-transition: width 0.3s linear;
  transition: width 0.3s linear;
}
.progress .indeterminate {
  background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0), white, rgba(255, 255, 255, 0));
  /* For Safari 5.1 to 6.0 */
  /* For Opera 11.1 to 12.0 */
  /* For Firefox 3.6 to 15 */
  background: linear-gradient(to right, rgba(255, 255, 255, 0), white, rgba(255, 255, 255, 0));
  /* Standard syntax (must be last) */
}
.progress .indeterminate:before {
  content: "";
  position: absolute;
  background-color: inherit;
  background: inherit;
  top: 0;
  left: 0;
  bottom: 0;
  will-change: left, right;
  -webkit-animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
  animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
}
.progress .indeterminate:after {
  content: "";
  position: absolute;
  background-color: inherit;
  background: inherit;
  top: 0;
  left: 0;
  bottom: 0;
  will-change: left, right;
  -webkit-animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
  animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
  -webkit-animation-delay: 1.15s;
  animation-delay: 1.15s;
}

@-webkit-keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }
  60% {
    left: 100%;
    right: -90%;
  }
  100% {
    left: 100%;
    right: -90%;
  }
}
@keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }
  60% {
    left: 100%;
    right: -90%;
  }
  100% {
    left: 100%;
    right: -90%;
  }
}
@-webkit-keyframes indeterminate-short {
  0% {
    left: -200%;
    right: 100%;
  }
  60% {
    left: 107%;
    right: -8%;
  }
  100% {
    left: 107%;
    right: -8%;
  }
}
@keyframes indeterminate-short {
  0% {
    left: -200%;
    right: 100%;
  }
  60% {
    left: 107%;
    right: -8%;
  }
  100% {
    left: 107%;
    right: -8%;
  }
}
.navbar {
  position: fixed;
  width: 100%;
  margin-bottom: 0px;
  border: 0px solid red;
  background-color: #fff;
  border-radius: 1px;
  z-index: 6;
  box-shadow: 1px 4px 5px rgba(0, 0, 0, 0.2);
}
.navbar > .container .navbar-header a.navbar-brand {
  margin-left: 0px;
  height: auto;
  padding: 10px 15px;
}
.navbar > .container .navbar-header a.navbar-brand img {
  width: 104px;
}
@media screen and (min-width: 768px) {
  .navbar > .container .navbar-header a.navbar-brand {
    padding: 4px 0px;
  }
  .navbar > .container .navbar-header a.navbar-brand img {
    width: auto;
  }
}
.navbar > .container .navbar-nav {
  margin: 15px 0px;
}
@media screen and (min-width: 768px) {
  .navbar > .container .navbar-nav {
    margin: 0px 12px 0px 0px;
  }
}
.navbar > .container .navbar-nav > li > a {
  color: #111;
  border: 0px;
}
@media screen and (min-width: 768px) {
  .navbar > .container .navbar-nav > li > a {
    padding: 37px 12px;
  }
}
.navbar > .container .navbar-nav li.current-menu-item > a, .navbar > .container .navbar-nav li.current-menu-ancestor > a {
  color: #fff;
  background: #58626c;
}
.navbar > .container .navbar-nav li:hover > a, .navbar > .container .navbar-nav li:hover > i, .navbar > .container .navbar-nav li:focus > a, .navbar > .container .navbar-nav li:focus > i, .navbar > .container .navbar-nav li:active > a, .navbar > .container .navbar-nav li:active > i {
  color: #fff;
  background: #58626c;
}
@media screen and (max-width: 767px) {
  .navbar > .container .navbar-nav li + li a {
    border-top: 1px solid #ddd;
  }
}
@media screen and (max-width: 767px) {
  .navbar > .container .navbar-nav li.has-sub {
    position: relative;
  }
  .navbar > .container .navbar-nav li.has-sub.open > a {
    color: #fff;
    background: #58626c;
  }
  .navbar > .container .navbar-nav li.has-sub .toggle-sub {
    position: absolute;
    top: 0;
    right: 0;
    padding: 13px 15px;
    border: 1px solid #ddd;
  }
  .navbar > .container .navbar-nav li.has-sub .dropdown-menu {
    width: auto;
    -webkit-transition: all 0s ease;
    transition: all 0s ease;
    margin: 15px;
    border: 1px solid #ddd;
  }
  .navbar > .container .navbar-nav li.has-sub .dropdown-menu li:first-child a {
    border: 0px solid transparent;
  }
}
@media screen and (min-width: 768px) {
  .navbar > .container .navbar-nav li.has-sub:hover ul.dropdown-menu {
    display: inline-block !important;
  }
}
@media screen and (min-width: 768px) {
  .navbar > .container .navbar-nav li.has-sub a i {
    margin-left: 5px;
  }
}
.navbar > .container .contact {
  margin: 16px 0px;
}
.navbar > .container .contact.visible-xs {
  float: left;
  margin: 13px 10px;
  padding: 6px 15px;
  font-size: 12px;
}
@media screen and (min-width: 768px) {
  .navbar > .container .contact {
    float: right;
  }
}
.navbar > .container .navbar-toggle {
  margin: 13px 15px 13px 0px;
  border-radius: 0px;
  padding: 15px;
}



/*# sourceMappingURL=data:application/json;base64, */
